//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.11.2
//     from Assets/Input/Gamepad/GamepadController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GamepadController: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GamepadController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GamepadController"",
    ""maps"": [
        {
            ""name"": ""vehicleControls"",
            ""id"": ""ffa75281-431a-40ae-a921-032e82ae78ad"",
            ""actions"": [
                {
                    ""name"": ""Accelerate"",
                    ""type"": ""Value"",
                    ""id"": ""497535ca-34ab-4d40-b924-6950a8984e28"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Brake"",
                    ""type"": ""Value"",
                    ""id"": ""e72c2522-5527-43d6-bec6-017c4a150c57"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Steer"",
                    ""type"": ""Value"",
                    ""id"": ""d1f5dcb9-4cb3-4b5f-987f-bba70c49e53d"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GearUp"",
                    ""type"": ""Button"",
                    ""id"": ""0dcd883c-45e8-4f36-b1d6-7d5c4cac3f77"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""GearDown"",
                    ""type"": ""Button"",
                    ""id"": ""ddb95ab4-7810-4257-8384-4db40dbcfab9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DRS"",
                    ""type"": ""Button"",
                    ""id"": ""e72fbe63-7547-4154-b5d7-bba1bf7d7920"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LookBack"",
                    ""type"": ""Button"",
                    ""id"": ""de059d23-7d75-4a3a-8754-4cd6d53db5a9"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""NextCam"",
                    ""type"": ""Button"",
                    ""id"": ""55e0b954-b99b-4fc7-863e-1771d4158043"",
                    ""expectedControlType"": """",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""b4fe17a3-6135-4ba6-9709-afd67418e28f"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Accelerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6e6f4431-3e76-4ca5-b1d7-ae914e1cab69"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Brake"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7784cfca-c2d4-4ba6-ad00-1d5917899b2c"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Steer"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""77b95c53-ae84-49d0-bb01-62f54679bba4"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GearUp"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b4a2331c-4f4f-4a47-be80-5bb186fcc98b"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""GearDown"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""04659590-e919-4da5-85aa-77e6e8e218d6"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DRS"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0e776270-2655-4870-8923-54240a569e36"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LookBack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a670f51e-1e72-43ea-a578-b2862e1107d2"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""NextCam"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // vehicleControls
        m_vehicleControls = asset.FindActionMap("vehicleControls", throwIfNotFound: true);
        m_vehicleControls_Accelerate = m_vehicleControls.FindAction("Accelerate", throwIfNotFound: true);
        m_vehicleControls_Brake = m_vehicleControls.FindAction("Brake", throwIfNotFound: true);
        m_vehicleControls_Steer = m_vehicleControls.FindAction("Steer", throwIfNotFound: true);
        m_vehicleControls_GearUp = m_vehicleControls.FindAction("GearUp", throwIfNotFound: true);
        m_vehicleControls_GearDown = m_vehicleControls.FindAction("GearDown", throwIfNotFound: true);
        m_vehicleControls_DRS = m_vehicleControls.FindAction("DRS", throwIfNotFound: true);
        m_vehicleControls_LookBack = m_vehicleControls.FindAction("LookBack", throwIfNotFound: true);
        m_vehicleControls_NextCam = m_vehicleControls.FindAction("NextCam", throwIfNotFound: true);
    }

    ~@GamepadController()
    {
        UnityEngine.Debug.Assert(!m_vehicleControls.enabled, "This will cause a leak and performance issues, GamepadController.vehicleControls.Disable() has not been called.");
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // vehicleControls
    private readonly InputActionMap m_vehicleControls;
    private List<IVehicleControlsActions> m_VehicleControlsActionsCallbackInterfaces = new List<IVehicleControlsActions>();
    private readonly InputAction m_vehicleControls_Accelerate;
    private readonly InputAction m_vehicleControls_Brake;
    private readonly InputAction m_vehicleControls_Steer;
    private readonly InputAction m_vehicleControls_GearUp;
    private readonly InputAction m_vehicleControls_GearDown;
    private readonly InputAction m_vehicleControls_DRS;
    private readonly InputAction m_vehicleControls_LookBack;
    private readonly InputAction m_vehicleControls_NextCam;
    public struct VehicleControlsActions
    {
        private @GamepadController m_Wrapper;
        public VehicleControlsActions(@GamepadController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Accelerate => m_Wrapper.m_vehicleControls_Accelerate;
        public InputAction @Brake => m_Wrapper.m_vehicleControls_Brake;
        public InputAction @Steer => m_Wrapper.m_vehicleControls_Steer;
        public InputAction @GearUp => m_Wrapper.m_vehicleControls_GearUp;
        public InputAction @GearDown => m_Wrapper.m_vehicleControls_GearDown;
        public InputAction @DRS => m_Wrapper.m_vehicleControls_DRS;
        public InputAction @LookBack => m_Wrapper.m_vehicleControls_LookBack;
        public InputAction @NextCam => m_Wrapper.m_vehicleControls_NextCam;
        public InputActionMap Get() { return m_Wrapper.m_vehicleControls; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(VehicleControlsActions set) { return set.Get(); }
        public void AddCallbacks(IVehicleControlsActions instance)
        {
            if (instance == null || m_Wrapper.m_VehicleControlsActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_VehicleControlsActionsCallbackInterfaces.Add(instance);
            @Accelerate.started += instance.OnAccelerate;
            @Accelerate.performed += instance.OnAccelerate;
            @Accelerate.canceled += instance.OnAccelerate;
            @Brake.started += instance.OnBrake;
            @Brake.performed += instance.OnBrake;
            @Brake.canceled += instance.OnBrake;
            @Steer.started += instance.OnSteer;
            @Steer.performed += instance.OnSteer;
            @Steer.canceled += instance.OnSteer;
            @GearUp.started += instance.OnGearUp;
            @GearUp.performed += instance.OnGearUp;
            @GearUp.canceled += instance.OnGearUp;
            @GearDown.started += instance.OnGearDown;
            @GearDown.performed += instance.OnGearDown;
            @GearDown.canceled += instance.OnGearDown;
            @DRS.started += instance.OnDRS;
            @DRS.performed += instance.OnDRS;
            @DRS.canceled += instance.OnDRS;
            @LookBack.started += instance.OnLookBack;
            @LookBack.performed += instance.OnLookBack;
            @LookBack.canceled += instance.OnLookBack;
            @NextCam.started += instance.OnNextCam;
            @NextCam.performed += instance.OnNextCam;
            @NextCam.canceled += instance.OnNextCam;
        }

        private void UnregisterCallbacks(IVehicleControlsActions instance)
        {
            @Accelerate.started -= instance.OnAccelerate;
            @Accelerate.performed -= instance.OnAccelerate;
            @Accelerate.canceled -= instance.OnAccelerate;
            @Brake.started -= instance.OnBrake;
            @Brake.performed -= instance.OnBrake;
            @Brake.canceled -= instance.OnBrake;
            @Steer.started -= instance.OnSteer;
            @Steer.performed -= instance.OnSteer;
            @Steer.canceled -= instance.OnSteer;
            @GearUp.started -= instance.OnGearUp;
            @GearUp.performed -= instance.OnGearUp;
            @GearUp.canceled -= instance.OnGearUp;
            @GearDown.started -= instance.OnGearDown;
            @GearDown.performed -= instance.OnGearDown;
            @GearDown.canceled -= instance.OnGearDown;
            @DRS.started -= instance.OnDRS;
            @DRS.performed -= instance.OnDRS;
            @DRS.canceled -= instance.OnDRS;
            @LookBack.started -= instance.OnLookBack;
            @LookBack.performed -= instance.OnLookBack;
            @LookBack.canceled -= instance.OnLookBack;
            @NextCam.started -= instance.OnNextCam;
            @NextCam.performed -= instance.OnNextCam;
            @NextCam.canceled -= instance.OnNextCam;
        }

        public void RemoveCallbacks(IVehicleControlsActions instance)
        {
            if (m_Wrapper.m_VehicleControlsActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IVehicleControlsActions instance)
        {
            foreach (var item in m_Wrapper.m_VehicleControlsActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_VehicleControlsActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public VehicleControlsActions @vehicleControls => new VehicleControlsActions(this);
    public interface IVehicleControlsActions
    {
        void OnAccelerate(InputAction.CallbackContext context);
        void OnBrake(InputAction.CallbackContext context);
        void OnSteer(InputAction.CallbackContext context);
        void OnGearUp(InputAction.CallbackContext context);
        void OnGearDown(InputAction.CallbackContext context);
        void OnDRS(InputAction.CallbackContext context);
        void OnLookBack(InputAction.CallbackContext context);
        void OnNextCam(InputAction.CallbackContext context);
    }
}
